@use "sass:list";

// variables sass

//pallette de couleur

$--clr-bleu-pale    : hsl(220, 100%, 85%);
$--clr-bleu-leger  : hsl(220, 100%, 60%);
$--clr-bleu-moyen  : hsl(220, 100%, 30%);    
$--clr-bleu-fonce  : hsl(220, 100%, 15%);


$--clr-orange-pale: hsl(40, 100%, 85%);
$--clr-orange-leger  : hsl(40, 100%, 50%);
$--clr-orange-moyen  : hsl(40, 100%, 30%);
$--clr-orange-fonce  : hsl(40, 100%, 15%);

$--clr-rouge-pale: hsl(10, 100%, 85%);
$--clr-rouge-leger  : hsl(10, 100%, 50%);
$--clr-rouge-moyen  : hsl(10, 100%, 30%);
$--clr-rouge-fonce  : hsl(10, 100%, 15%);

$--clr-vert-pale: hsl(70, 100%, 85%);
$--clr-vert-leger  : hsl(70, 100%, 50%);
$--clr-vert-moyen  : hsl(70, 100%, 30%);
$--clr-vert-fonce  : hsl(70, 100%, 15%);

// map 

$defaut: (
    primaire : (
        100: $--clr-bleu-pale,
        200: $--clr-bleu-leger,
        300: $--clr-bleu-moyen,
        400: $--clr-bleu-fonce
    ),
    secondaire : (
        100: $--clr-orange-pale,
        200: $--clr-orange-leger,
        300: $--clr-orange-moyen,
        400: $--clr-orange-fonce
    ),
    ternaire : (
        100: $--clr-rouge-pale,
        200: $--clr-rouge-leger,
        300: $--clr-rouge-moyen,
        400: $--clr-rouge-fonce
    ),
    vert : (
        100: $--clr-vert-pale,
        200: $--clr-vert-leger,
        300: $--clr-vert-moyen,
        400: $--clr-vert-fonce
    )
);



$agencement-couleur :(
    primaire: ($--clr-bleu-fonce, ($--clr-bleu-pale, $--clr-bleu-leger)),
    secondaire: ($--clr-orange-fonce, $--clr-orange-pale),
    ternaire: ($--clr-rouge-fonce, $--clr-rouge-pale),
    vert: ($--clr-vert-fonce, $--clr-vert-pale)
);

//création de class de couleur

@each $nom, $couleurs in $defaut {
    @each $valeur, $couleur in $couleurs {
        .clr-#{$nom}-#{$valeur} {
            color : #{$couleur};
           
        }
            .bck-#{$nom}-#{$valeur} {
          
            background-color:  #{$couleur} ;
        }
    }
    }



    @mixin couleur-agencement($clr,$bck){
        color: $clr;
        @if(list.length($bck)==1){
            background-color: $bck;
        }   @else {
            background-image: linear-gradient(90deg, $bck);
        }   
    }

    @each $valeur, $clr in $agencement-couleur {
        .clr-agencement-#{$valeur} {
            @include couleur-agencement($clr...);
        }
    } 

:root {
    --u1 : 0; //couleur initial
    --u2 : calc(var(--u1) + 180 - 15); //couleur complémentaire
    --u3 : calc(var(--u2) - 30); //couleur analogue gauche complémentaire
    --u4 : calc(var(--u1) + 180); //couleur analogue droite complémentaire

    --s-arriere : 100%; //saturation arrière plan
    --s-avant : 100%; //saturation avant plan

    --l-arriere : 70%; //luminosité arrière plan
    --l-avant : 10%; //luminosité avant plan

    //couleur arrière plan

    --couleur-arriere-entete : hsl(var(--u1), var(--s-arriere), var(--l-arriere));
    --couleur-arriere-accueil : hsl(var(--u2), var(--s-arriere), var(--l-arriere));
    --couleur-degrade-bleuNeg : hsl(var(--u3), var(--s-arriere), var(--l-arriere));
    --couleur-degrade-bleuPos : hsl(var(--u4), var(--s-arriere), var(--l-arriere));
    --couleur-arriere-footer : hsl(var(--u1), var(--s-arriere), var(--l-arriere));

    //couleur avant plan

    --couleur-entete : hsl(var(--u1), var(--s-avant), var(--l-avant));
    --couleur-accueil : hsl(var(--u2), var(--s-avant), var(--l-avant));
    --couleur-evenement : hsl(var(--u3), var(--s-avant), var(--l-avant));
    --couleur-galerie : hsl(var(--u4), var(--s-avant), var(--l-avant));
    --couleur-footer : hsl(var(--u1), var(--s-avant), var(--l-avant));
    /*transparence*/

    --transparenceH1 : 0.9;
    --transparenceBande : 0.08;
    --transparenceSection : 0.15;

    /*largeur zone centrale*/

    --largeur-zone-centrale : 1100px;


}

